# AION Hedera Integration Makefile
# Usage: make -f Makefile.hedera <target>

# Load environment variables
include .env.hedera

# Default target
.DEFAULT_GOAL := help

# Colors for output
RED=\033[0;31m
GREEN=\033[0;32m
YELLOW=\033[1;33m
BLUE=\033[0;34m
NC=\033[0m # No Color

# Help target
help: ## Show this help message
	@echo "$(BLUE)AION Hedera Integration Commands$(NC)"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "$(GREEN)%-20s$(NC) %s\n", $$1, $$2}'

# Environment setup
setup: ## Set up development environment
	@echo "$(YELLOW)Setting up Hedera development environment...$(NC)"
	@cp .env.hedera.example .env.hedera
	@echo "$(GREEN)✓ Environment file created$(NC)"
	@echo "$(YELLOW)Please update .env.hedera with your Hedera credentials$(NC)"

check-env: ## Check environment variables
	@echo "$(YELLOW)Checking environment configuration...$(NC)"
	@if [ -z "$(HEDERA_ACCOUNT_ID)" ]; then echo "$(RED)✗ HEDERA_ACCOUNT_ID not set$(NC)"; exit 1; fi
	@if [ -z "$(HEDERA_PRIVATE_KEY)" ]; then echo "$(RED)✗ HEDERA_PRIVATE_KEY not set$(NC)"; exit 1; fi
	@if [ -z "$(PRIVATE_KEY)" ]; then echo "$(RED)✗ PRIVATE_KEY not set$(NC)"; exit 1; fi
	@echo "$(GREEN)✓ Environment configuration valid$(NC)"

# Build targets
build: ## Build contracts
	@echo "$(YELLOW)Building contracts...$(NC)"
	@forge build
	@echo "$(GREEN)✓ Contracts built successfully$(NC)"

clean: ## Clean build artifacts
	@echo "$(YELLOW)Cleaning build artifacts...$(NC)"
	@forge clean
	@echo "$(GREEN)✓ Build artifacts cleaned$(NC)"

# Testing targets
test: ## Run all tests
	@echo "$(YELLOW)Running contract tests...$(NC)"
	@forge test -vv
	@echo "$(GREEN)✓ Tests completed$(NC)"

test-hedera: ## Run Hedera-specific tests
	@echo "$(YELLOW)Running Hedera integration tests...$(NC)"
	@forge test --match-contract "Hedera" -vv
	@echo "$(GREEN)✓ Hedera tests completed$(NC)"

test-gas: ## Run tests with gas reporting
	@echo "$(YELLOW)Running tests with gas reporting...$(NC)"
	@forge test --gas-report
	@echo "$(GREEN)✓ Gas report generated$(NC)"

# Deployment targets
deploy-hedera: check-env build ## Deploy to Hedera testnet
	@echo "$(YELLOW)Deploying to Hedera testnet...$(NC)"
	@forge script script/DeployHederaVault.s.sol \
		--rpc-url $(HEDERA_RPC_URL) \
		--broadcast \
		--verify \
		--etherscan-api-key $(HEDERA_API_KEY) \
		-vvv
	@echo "$(GREEN)✓ Deployment completed$(NC)"

setup-services: check-env ## Set up Hedera services
	@echo "$(YELLOW)Setting up Hedera services...$(NC)"
	@forge script script/SetupHederaServices.s.sol \
		--rpc-url $(HEDERA_RPC_URL) \
		--broadcast \
		-vvv
	@echo "$(GREEN)✓ Services setup completed$(NC)"

deploy-local: build ## Deploy to local network
	@echo "$(YELLOW)Deploying to local network...$(NC)"
	@forge script script/DeployHederaVault.s.sol \
		--rpc-url http://localhost:8545 \
		--broadcast \
		-vvv
	@echo "$(GREEN)✓ Local deployment completed$(NC)"

# Verification targets
verify: ## Verify deployed contracts
	@echo "$(YELLOW)Verifying contracts...$(NC)"
	@if [ -z "$(VAULT_CONTRACT_ADDRESS)" ]; then echo "$(RED)✗ VAULT_CONTRACT_ADDRESS not set$(NC)"; exit 1; fi
	@forge verify-contract $(VAULT_CONTRACT_ADDRESS) \
		src/hedera/AIONVaultHedera.sol:AIONVaultHedera \
		--etherscan-api-key $(HEDERA_API_KEY) \
		--rpc-url $(HEDERA_RPC_URL)
	@echo "$(GREEN)✓ Contract verification completed$(NC)"

# Interaction targets
create-topic: check-env ## Create HCS topic
	@echo "$(YELLOW)Creating HCS topic...$(NC)"
	@cd ../mcp_agent && npm run create-hcs-topic
	@echo "$(GREEN)✓ HCS topic created$(NC)"

init-hfs: check-env ## Initialize HFS storage
	@echo "$(YELLOW)Initializing HFS storage...$(NC)"
	@cd ../mcp_agent && npm run init-hfs-storage
	@echo "$(GREEN)✓ HFS storage initialized$(NC)"

test-integration: check-env ## Run integration tests
	@echo "$(YELLOW)Running integration tests...$(NC)"
	@cd ../mcp_agent && npm run test:hedera
	@echo "$(GREEN)✓ Integration tests completed$(NC)"

# Monitoring targets
start-agent: check-env ## Start MCP agent with Hedera integration
	@echo "$(YELLOW)Starting MCP agent...$(NC)"
	@cd ../mcp_agent && npm start
	@echo "$(GREEN)✓ MCP agent started$(NC)"

monitor-events: check-env ## Monitor vault events
	@echo "$(YELLOW)Monitoring vault events...$(NC)"
	@cd ../mcp_agent && npm run monitor-events
	@echo "$(GREEN)✓ Event monitoring started$(NC)"

# Utility targets
balance: check-env ## Check account balance
	@echo "$(YELLOW)Checking account balance...$(NC)"
	@cast balance $(ADMIN_ADDRESS) --rpc-url $(HEDERA_RPC_URL)
	@echo "$(GREEN)✓ Balance check completed$(NC)"

gas-price: ## Check current gas price
	@echo "$(YELLOW)Checking gas price...$(NC)"
	@cast gas-price --rpc-url $(HEDERA_RPC_URL)
	@echo "$(GREEN)✓ Gas price retrieved$(NC)"

block-number: ## Get current block number
	@echo "$(YELLOW)Getting current block number...$(NC)"
	@cast block-number --rpc-url $(HEDERA_RPC_URL)
	@echo "$(GREEN)✓ Block number retrieved$(NC)"

# Documentation targets
docs: ## Generate documentation
	@echo "$(YELLOW)Generating documentation...$(NC)"
	@forge doc --build
	@echo "$(GREEN)✓ Documentation generated$(NC)"

# Maintenance targets
update-deps: ## Update dependencies
	@echo "$(YELLOW)Updating dependencies...$(NC)"
	@forge update
	@echo "$(GREEN)✓ Dependencies updated$(NC)"

format: ## Format code
	@echo "$(YELLOW)Formatting code...$(NC)"
	@forge fmt
	@echo "$(GREEN)✓ Code formatted$(NC)"

lint: ## Lint code
	@echo "$(YELLOW)Linting code...$(NC)"
	@forge fmt --check
	@echo "$(GREEN)✓ Code linting completed$(NC)"

# Complete deployment workflow
deploy-full: setup-env build deploy-hedera setup-services create-topic init-hfs ## Complete deployment workflow
	@echo "$(GREEN)✓ Full deployment workflow completed$(NC)"
	@echo "$(BLUE)Next steps:$(NC)"
	@echo "1. Update .env.hedera with deployed contract addresses"
	@echo "2. Start MCP agent: make start-agent"
	@echo "3. Run integration tests: make test-integration"

# Status check
status: ## Check deployment status
	@echo "$(YELLOW)Checking deployment status...$(NC)"
	@echo "$(BLUE)Environment:$(NC)"
	@echo "  Network: $(HEDERA_NETWORK)"
	@echo "  RPC URL: $(HEDERA_RPC_URL)"
	@echo "  Account: $(HEDERA_ACCOUNT_ID)"
	@echo ""
	@echo "$(BLUE)Contracts:$(NC)"
	@echo "  Vault: $(VAULT_CONTRACT_ADDRESS)"
	@echo "  HTS Manager: $(HTS_TOKEN_MANAGER_ADDRESS)"
	@echo "  Hedera Service: $(SAFE_HEDERA_SERVICE_ADDRESS)"
	@echo ""
	@echo "$(BLUE)Services:$(NC)"
	@echo "  HCS Topic: $(HCS_TOPIC_ID)"
	@echo "  HFS File: $(HFS_FILE_ID)"

.PHONY: help setup check-env build clean test test-hedera test-gas deploy-hedera setup-services deploy-local verify create-topic init-hfs test-integration start-agent monitor-events balance gas-price block-number docs update-deps format lint deploy-full status